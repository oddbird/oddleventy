{% import "utility.macros.njk" as utility %}
{% import 'layout.macros.njk' as layout %}
{% import 'embed.macros.njk' as embed %}

{# @docs
label: Quote Macros
category: File
note: |
  Pullquotes, blockquotes, citations,
  and quote-grids generated from structured data.
  See the [typography samples](/sample/type/)
  for more usage examples.
#}


{# @docs
label: pullquote
category: From markdown
note: |
  Generate markup for a pullquote,
  by passing in the quote as markdown.
  Since pull-quotes don't require citations,
  there's little reason to use structured data.
#}
{% macro pullquote(
  content=none
) -%}
{%- set content = content if (content != none) else caller() -%}
{%- if content -%}
<div class="pullquote">{{ content | md | safe }}</div>
{%- endif -%}
{%- endmacro %}


{# @docs
label: blockquote
category: From data
note: |
  Generate a single quote from structured data.
  Basic markdown blockquote syntax is preferred
  for simple markdown quotes.
  There is no need for a macro
  when creating one-off quotes in markdown content.
example: |
  {{ quotes.blockquote(press | withData('slug', 'extension')) }}
params:
  data:
    type: object
    note: |
      Quote dictionaries include:

      - `text`: The markdown content of the quote
      - (`citation data`): See `cite` macro
  type:
    type: 'solo | grid'
    default: solo
#}
{% macro blockquote(
  data,
  type='solo'
) -%}
{%- set img -%}
  {%- if data.face -%}
    {{- embed.img(
      src='quotes/' + data.face,
      width=60,
      height=60,
      attrs={
        'class': 'u-photo'
      }
    ) -}}
  {%- else -%}
    {{ embed.svg(data.icon or 'icons/quote') }}
  {%- endif -%}
{%- endset -%}

<blockquote
  data-quote="{{ type or '' }}"
  {{ utility.attr_if('class', 'offset-item' if (type == 'grid') else none) }}>
{%- call embed.media_block(
  media=img,
  name='quote'
) -%}
{{- data.text | md | safe -}}
{{- cite(data) | safe -}}
{%- endcall -%}
</blockquote>
{%- endmacro %}


{# @docs
label: from
category: From data
note: |
  Display one or all quotes from a page with `press` data.
example: |
  {{ quotes.find(collections.all, page='/work/timedesigner/') }}
  {{ quotes.find(collections.all, 'extension') }}
  {{ quotes.find(collections.all, ['extension', 'goals']) }}
params:
  collection:
    type: array
    note: containing 11ty page objects
  slugs:
    type: string | array | none
    default: 'none'
    note: Select quotes based on their `slug` value
  page:
    type: url | none
    default: 'none'
    note: Select quotes from a particular page
#}
{% macro find(
  collection,
  slugs=none,
  page=none
) -%}
  {%- if slugs | typeCheck('string') -%}
    {%- set quote = collection | findData('data.press', {'slug': slugs}) -%}
    {{- blockquote(quote) if quote else none -}}
  {%- else -%}
    {%- set data = collection | getPage(page, 'data.press') if page else collection | getData('data.press') -%}

    {%- if slugs -%}
      {%- set content -%}
        {%- for item in slugs -%}
          {%- set quote = data | findData(false, {'slug': item}) -%}
          {{- blockquote(quote, 'grid') if quote else none -}}
        {%- endfor -%}
      {%- endset -%}
      {{- layout.offset(content) | safe -}}
    {%- else -%}
      {{- grid(data) if data else none -}}
    {%- endif -%}
  {%- endif -%}
{%- endmacro %}


{# @docs
label: grid
category: From data
note: |
  Generate a quote grid from structured data.
example: |
  {{ quotes.grid(press) }}
params:
  data:
    type: array
    note: Array of quote objects.
#}
{% macro grid(
  data
) -%}
  {%- if data | length -%}
    {%- set content -%}
      {%- for item in data -%}
        {%- if item.text -%}
          {{- blockquote(item, 'grid') -}}
        {%- endif -%}
      {%- endfor -%}
    {%- endset -%}
    {{- layout.offset(content) | safe -}}
  {%- endif -%}
{%- endmacro %}


{# @docs
label: cite
category: From data
note: Generate a citation line from data.
params:
  data:
    type: object
    note: |
      Citation data includes:

      - `name`: who said it?
      - `venue` [optional]: article, publication, or company name
      - `title` [optional]: job title of the person quoted
      - `url` [optional]: link for context
#}
{% macro cite(
  data
) -%}
<p class="byline h-card">---{{ _cite(data) | safe }}</p>
{%- endmacro %}


{# @docs
label: signature
category: Meta
note: |
  Make Miriam sign something.
  Huh, this seems like a bad idea,
  doesn't it?
#}
{% macro signature() %}
{% set data = {
  'name': 'Miriam Suzanne',
  'url': '/authors/miriam/'
} %}
<div class="signature h-card">
{{ embed.svg('icons/miriam-sig') }}
<p class="byline">{{ _cite(data) | safe }}</p>
</div>
{% endmacro %}


{# Citation logic, for internal useâ€¦ #}
{% macro _cite(
  data
) -%}
  {%- set venue = utility.link_if(
    content=data.venue,
    url=data.url if not data.title,
    class='p-org h-card h-name'
  ) if data.venue else none -%}
  {%- set title = utility.link_if(
    content=data.title,
    url=data.url if not venue,
    class='p-job-title'
  ) if data.title else none -%}
  {%- set context = utility.link_if(
    content=[title, venue] | join(' <i>at</i> '),
    url=data.url
  ) if (title and venue) else (title or venue) -%}
  {%- set name = utility.link_if(
    content=data.name,
    url=data.url if not context,
    class='p-name'
  ) -%}
  {%- set full = [name, context] | join(', ') if (name and context) else (name or context) -%}
  {{- full | safe -}}
{%- endmacro %}
