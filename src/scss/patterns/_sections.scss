@use '../config';
@use '../config/scale/page-sizes';
@use 'sass:map';
@use 'sass:meta';

// Main Actions
// ------------
/// Main actions are large block links,
/// used at the end of a section
/// to represent the main call to action of that section.
/// @group links
.main-action {
  font-size: var(--medium);
  margin-top: var(--double-gutter);
}

[data-section-title],
[data-flag] {
  clip-path: var(--flag);
}

[data-section-title='left'],
[data-flag='right'] {
  --flag: polygon(
    0 0,
    100% 0,
    calc(100% - var(--flag-indent, var(--shim))) 50%,
    100% 100%,
    0 100%
  );

  padding-right: calc(var(--flag-indent, var(--shim)) + var(--shim));
}

[data-section-title='right'],
[data-flag='left'] {
  --flag: polygon(
    0 0,
    100% 0,
    100% 100%,
    0 100%,
    var(--flag-indent, var(--shim)) 50%
  );

  padding-left: calc(var(--flag-indent, var(--shim)) + var(--shim));
}

// Titles
// ------

[data-section-title] {
  --flag-indent: var(--gutter-plus);
  --column: full;

  background: var(--feature);
  color: var(--bg);
  padding: var(--quarter-shim) var(--spacer) var(--half-shim);
  margin: var(--title-margin, var(--double-gutter)) auto;
}

[data-section-title='left'] {
  margin-left: 0;
  padding-left: var(--page-margin);
}

[data-section-title='right'] {
  margin-right: 0;
  padding-right: var(--page-margin);
}

// Link
// ----
.section-link {
  --column: content;

  justify-self: var(--section-link-justify, end);
  margin-block: var(--gutter) var(--double-gutter);
}

// Blocks
// ------

[data-block] {
  margin-bottom: var(--block-spacer, var(--double-gutter));
  margin-top: var(--block-spacer, var(--double-gutter));
  max-width: var(--block-max);
}

[data-block~='center'] {
  margin-inline: auto;
}

[data-block~='rotate'] {
  transform: rotate(var(--rotate, 0));

  @include config.above('wide-page') {
    --rotate: -6deg;
  }
}

[data-block~='full'] {
  --column: full;
}

[data-block~='column'] {
  [data-grid] & {
    --block-spacer: 0;
  }
}

@each $name, $size in meta.module-variables('page-sizes') {
  [data-block~='#{$name}'] {
    --block-max: var(--#{$name});
  }
}

// Grids
// -----

[data-grid] {
  --fit--default: minmax(
    var(---mobile-min, var(--fit-min, var(--grid-item))),
    var(--fit-max, 1fr)
  );
  --column: content;
  --item-title: var(--h3);
  --newline: var(--shim);

  align-items: var(--align, start);
  display: grid;
  font-size: var(--small);
  grid: var(--row-template, auto-flow) / var(
      --col-template,
      repeat(auto-fit, var(--fit, var(--fit--default)))
    );
  grid-gap: var(--row-gap, var(--gap, var(--double-gutter)))
    var(--col-gap, var(--gap, var(--double-gutter)));
  justify-content: var(--justify, center);
  justify-items: stretch;

  @include config.below('page') {
    // "private" variable to ensure grid-items fit on mobileâ€¦
    ---mobile-min: 60%;
  }

  > * {
    max-width: 100%;
  }
}

.item-title {
  font-size: var(--item-title, var(--h3));
  margin: 0 0 var(--newline);
}

// Special
[data-grid='birds'] {
  --fit-min: calc(var(--grid-item) * 1.25);
  --media-content: var(--min-page-column);
  --media-gap: var(--shim);
  --newline: inherit;
}

// Allows for smaller columns of text, like when used inside a media block
[data-grid='narrow-columns'] {
  --fit-min: calc(var(--grid-item) * 0.75);
}

// Container with centered top/bottom triangles
.has-angles {
  background: var(--callout-fade);
  clip-path: polygon(
    0 0,
    calc(50% - var(--double-gutter)) 0,
    50% var(--double-gutter),
    calc(50% + var(--double-gutter)) 0,
    100% 0,
    100% calc(100% - var(--double-gutter)),
    calc(50% + var(--double-gutter)) calc(100% - var(--double-gutter)),
    50% 100%,
    calc(50% - var(--double-gutter)) calc(100% - var(--double-gutter)),
    0 calc(100% - var(--double-gutter))
  );
  padding: var(--spacer) var(--page-margin) calc(var(--spacer) + var(--gutter));
}
